

pipeline {
    environment {
        APP_NAME = 'angular-test-code'
        JENKINSFILE_LOCATION = 'JenkinsFile'
        DOCKER_REGISTRY = 'gauravmathur1/angular-test-docker'
        VERSION="$BUILD_NUMBER"
        registryCredential = 'dockerhub'
        dockerImage = ''
    }
    agent any
    stages {
       stage("Stage with input") {
            steps {
           
                script {
                       emailext mimeType: 'text/html',
                       subject: "[Jenkins]${currentBuild.fullDisplayName}",
                       to: "gauravmathur94@gmail.com",
                       body: '''<a href="${BUILD_URL}input">click to approve</a>'''

                        def userInput = input id: 'userInput',
                                              message: 'Let\'s promote?', 
                                              submitterParameter: 'submitter',
                                              submitter: 'Gaurav',
                                              parameters: [
                                                [$class: 'TextParameterDefinition', defaultValue: 'sit', description: 'Environment', name: 'env'],
                                                [$class: 'TextParameterDefinition', defaultValue: 'k8s', description: 'Target', name: 'target']]

                        echo ("Env: "+userInput['env'])
                        echo ("Target: "+userInput['target'])
                        echo ("submitted by: "+userInput['submitter'])
                    if(userInput == true) {
                        // do action
                    } else {
                        // not do action
                        echo "Action was aborted."
                    }

                }    
            }  
        }
        stage('Docker Build') {
            steps {
                script {
                     sh 'echo printenv'
                     dockerImage = docker.build "${DOCKER_REGISTRY}" + ":${VERSION}"
                }
            }
        }
        stage('Docker Run') {
            steps {
                sh 'docker stop $(docker ps -a -q)'
                script {
                    dockerImage.run("-p 8081:80")
                }
            }
        }
        stage('Image push to Artifactory') {
            steps {
                script {
                         docker.withRegistry( '', registryCredential ) {
                            dockerImage.push()
                        }
                     }
                }
         }
         stage('Remove Unused Docker image') {
            steps{
                sh "docker rmi $DOCKER_REGISTRY:$BUILD_NUMBER"
            }
        }

    }
}
